// Code generated by MockGen. DO NOT EDIT.
// Source: serve/serve.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockserve is a mock of serve interface.
type Mockserve struct {
	ctrl     *gomock.Controller
	recorder *MockserveMockRecorder
}

// MockserveMockRecorder is the mock recorder for Mockserve.
type MockserveMockRecorder struct {
	mock *Mockserve
}

// NewMockserve creates a new mock instance.
func NewMockserve(ctrl *gomock.Controller) *Mockserve {
	mock := &Mockserve{ctrl: ctrl}
	mock.recorder = &MockserveMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockserve) EXPECT() *MockserveMockRecorder {
	return m.recorder
}

// Serve mocks base method.
func (m *Mockserve) Serve() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Serve")
}

// Serve indicates an expected call of Serve.
func (mr *MockserveMockRecorder) Serve() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Serve", reflect.TypeOf((*Mockserve)(nil).Serve))
}
